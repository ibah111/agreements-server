import { NotFoundException, Post } from '@nestjs/common';
import { InjectModel } from '@sql-tools/nestjs-sequelize';
import { Paper } from '../../Modules/LocalDatabase/Models/Paper';
import { AddPostInput, EditPostInput } from './Post.input';
export class PostService {
  GetPost(index: number) {
    throw new Error('Method not implemented.');
  }
  constructor(@InjectModel(Paper) private readonly modelPaper: typeof Paper) {}

  async addPost({ data }: { data: AddPostInput }) {
    const newPost = await this.modelPaper.create({ ...data });
    console.log('–ü–æ—Å—Ç –Ω–∞–ø–∏—Å–∞–Ω –∏ —Å–æ–∑–¥–∞–Ω');
    return newPost;
  }
  async editPost(data: EditPostInput) {
    const name = await this.modelPaper.update(
      {
        [data.name]: data.text,
      },
      { where: { id: data.text } },
    );
    console.log('–ü–æ—Å—Ç –æ—Ç—Ä–µ–¥–∫–∞—Ç–∏—Ä–æ–≤–∞–Ω');
    return true;
  }
  async deletePost(id: number) {
    const Post = await this.modelPaper.findByPk(id);
    if (Post) {
      console.log('–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω');
      return Post.destroy();
    } else {
      throw new NotFoundException('–ü–æ—Å—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª—è—Ç—å –Ω–µ—á–µ–≥–æ');
    }
  }
  async getPost(id: number) {
    const user = await this.modelPaper.findByPk(id);
    if (user) {
      console.log('–ü–æ—Å—Ç –Ω–∞–π–¥–µ–Ω');
      return user;
    } else {
      throw new NotFoundException('–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–ΩüôÉ');
    }
  }
}
